#!/bin/bash
# IOI 2013 MachineDB Service
# Src: http://ubuntuforums.org/showthread.php?t=1704166

## Config
PROG="WebServer.py"
PROG_NAME="machinedb"
PROG_PATH="/usr/bin/machinedb" ## Not need, but sometimes helpful (if $PROG resides in /opt for example).
PROG_ARGS="" 
PID_PATH="/var/run/"
INSTANCES=4

start() {
    for (( i=0; i<$INSTANCES; i++ ))
    do
        if [ -e "$PID_PATH/$PROG_NAME$i.pid_txt" ]; then
            ## Program is running, exit with error.
            echo "Error! $PROG_NAME instance $i is currently running!" 1>&2
            exit 1
        else
            # Start the program.
            $PROG_PATH/$PROG $i $PROG_ARGS 2>&1 >/var/log/$PROG_NAME$i &
            PID=$!
            echo "$PROG_NAME instance $i started on pid $PID"
            echo "$PID" > $PID_PATH/$PROG_NAME$i.pid_txt
        fi
    done
}

stop() {
    for (( i=0; i<$INSTANCES; i++ ))
    do
        if [ -e "$PID_PATH/$PROG_NAME$i.pid_txt" ]; then
            ## Program is running, so stop it
            PID=`cat $PID_PATH/$PROG_NAME$i.pid_txt`
            kill $PID

            rm "$PID_PATH/$PROG_NAME$i.pid_txt"

            echo "$PROG_NAME instance $i PID $PID stopped"
        else
            ## Program is not running, exit with error.
            echo "Error! $PROG_NAME instance $i not started!" 1>&2
            exit 1
        fi
    done
}

## Check to see if we are running as root first.
## Found at http://www.cyberciti.biz/tips/shell-root-user-check-script.html
if [ "$(id -u)" != "0" ]; then
    echo "This script must be run as root" 1>&2
    exit 1
fi

case "$1" in
    start)
        start
        exit 0
    ;;
    stop)
        stop
        exit 0
    ;;
    reload|restart|force-reload)
        stop
        start
        exit 0
    ;;
    **)
        echo "Usage: $0 {start|stop|reload}" 1>&2
        exit 1
    ;;
esac
